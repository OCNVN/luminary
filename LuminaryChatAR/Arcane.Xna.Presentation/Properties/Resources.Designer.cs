//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :2.0.50727.3053
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Arcane.Xna.Presentation.Properties {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Arcane.Xna.Presentation.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BackBufferWidth and BackBufferHeight must be greater than zero..
        /// </summary>
        internal static string BackBufferDimMustBePositive {
            get {
                return ResourceManager.GetString("BackBufferDimMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Unable to create the graphics device..
        /// </summary>
        internal static string Direct3DCreateError {
            get {
                return ResourceManager.GetString("Direct3DCreateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The graphics driver returned a low-level error. Please recreate the device or reboot your computer..
        /// </summary>
        internal static string Direct3DInternalDriverError {
            get {
                return ResourceManager.GetString("Direct3DInternalDriverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The device creation parameters contain invalid configuration options..
        /// </summary>
        internal static string Direct3DInvalidCreateParameters {
            get {
                return ResourceManager.GetString("Direct3DInvalidCreateParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Direct3D 9 is not available. This could be the result of using Remote Desktop or a corrupted DirectX 9 installation..
        /// </summary>
        internal static string Direct3DNotAvailable {
            get {
                return ResourceManager.GetString("Direct3DNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Game cannot be null..
        /// </summary>
        internal static string GameCannotBeNull {
            get {
                return ResourceManager.GetString("GameCannotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot commit or change device settings if the graphics component has not been added to a game&apos;s component list..
        /// </summary>
        internal static string GraphicsComponentNotAttachedToGame {
            get {
                return ResourceManager.GetString("GraphicsComponentNotAttachedToGame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à A graphics device manager is already registered.  The graphics device manager cannot be changed once it is set..
        /// </summary>
        internal static string GraphicsDeviceManagerAlreadyPresent {
            get {
                return ResourceManager.GetString("GraphicsDeviceManagerAlreadyPresent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Value must be a valid pixel shader profile..
        /// </summary>
        internal static string InvalidPixelShaderProfile {
            get {
                return ResourceManager.GetString("InvalidPixelShaderProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Value must be a valid vertex shader profile..
        /// </summary>
        internal static string InvalidVertexShaderProfile {
            get {
                return ResourceManager.GetString("InvalidVertexShaderProfile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not find a Direct3D device that supports the requested features..
        /// </summary>
        internal static string NoCompatibleDevices {
            get {
                return ResourceManager.GetString("NoCompatibleDevices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The process of ranking devices removed all compatible devices..
        /// </summary>
        internal static string NoCompatibleDevicesAfterRanking {
            get {
                return ResourceManager.GetString("NoCompatibleDevicesAfterRanking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Direct3D hardware acceleration is not available or has been disabled. Verify that a Direct3D enabled graphics device is installed and check the display properties to make sure hardware acceleration is set to Full..
        /// </summary>
        internal static string NoDirect3DAcceleration {
            get {
                return ResourceManager.GetString("NoDirect3DAcceleration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Direct3D is not available when you are using Remote Desktop..
        /// </summary>
        internal static string NoDirect3DAccelerationRemoteDesktop {
            get {
                return ResourceManager.GetString("NoDirect3DAccelerationRemoteDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à This property requires a graphics device service in the game service container..
        /// </summary>
        internal static string NoGraphicsDeviceService {
            get {
                return ResourceManager.GetString("NoGraphicsDeviceService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Cannot call Game.Run multiple times within the same application..
        /// </summary>
        internal static string NoMultipleRuns {
            get {
                return ResourceManager.GetString("NoMultipleRuns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Could not find a Direct3D device that has a Direct3D 9 level driver and supports pixel shader 1.1 or greater..
        /// </summary>
        internal static string NoPixelShader11OrDDI9Support {
            get {
                return ResourceManager.GetString("NoPixelShader11OrDDI9Support", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When using multiple PresentationParameters and EnableAutoDepthStencil is true, EnableAutoDepthStencil, AutoDepthStencilFormat, BackBufferFormat, BackBufferWidth, and BackBufferHeight must be the same for all adapters..
        /// </summary>
        internal static string ValidateAutoDepthStencilAdapterGroup {
            get {
                return ResourceManager.GetString("ValidateAutoDepthStencilAdapterGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified DepthStencilFormat is not supported as a depth/stencil format when using the selected BackBufferFormat..
        /// </summary>
        internal static string ValidateAutoDepthStencilFormatIncompatible {
            get {
                return ResourceManager.GetString("ValidateAutoDepthStencilFormatIncompatible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The specified DepthStencilFormat is not supported as a depth/stencil format for the selected adapter..
        /// </summary>
        internal static string ValidateAutoDepthStencilFormatInvalid {
            get {
                return ResourceManager.GetString("ValidateAutoDepthStencilFormatInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When PresentOptions.DiscardDepthStencil is set, EnabledAutoDepthStencil  must be true..
        /// </summary>
        internal static string ValidateAutoDepthStencilMismatch {
            get {
                return ResourceManager.GetString("ValidateAutoDepthStencilMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BackBufferCount must be between 0 and 3..
        /// </summary>
        internal static string ValidateBackBufferCount {
            get {
                return ResourceManager.GetString("ValidateBackBufferCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When using SwapEffect.Copy, BackBufferCount must be one..
        /// </summary>
        internal static string ValidateBackBufferCountSwapCopy {
            get {
                return ResourceManager.GetString("ValidateBackBufferCountSwapCopy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When IsFullScreen is true, BackBufferWidth and BackBufferHeight must be non-zero..
        /// </summary>
        internal static string ValidateBackBufferDimsFullScreen {
            get {
                return ResourceManager.GetString("ValidateBackBufferDimsFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The BackBufferWidth and BackBufferHeight values do not correspond to a valid display mode..
        /// </summary>
        internal static string ValidateBackBufferDimsModeFullScreen {
            get {
                return ResourceManager.GetString("ValidateBackBufferDimsModeFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à BackBufferFormat must be one of the following: Bgr565, Bgr555, Bgra5551, Bgr32, Color, or Bgra1010102..
        /// </summary>
        internal static string ValidateBackBufferFormatIsInvalid {
            get {
                return ResourceManager.GetString("ValidateBackBufferFormatIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à FullScreenRefreshRateInHz does not match a valid display mode with the specified BackBufferWidth and BackBufferHeight..
        /// </summary>
        internal static string ValidateBackBufferHzModeFullScreen {
            get {
                return ResourceManager.GetString("ValidateBackBufferHzModeFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à DepthStencilFormat must be one of the following: Depth32, Depth15Stencil1, Depth24Stencil8, Depth24, Depth24Stencil4, Depth16, or Depth24Stencil8Single..
        /// </summary>
        internal static string ValidateDepthStencilFormatIsInvalid {
            get {
                return ResourceManager.GetString("ValidateDepthStencilFormatIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The selected BackBufferFormat and IsFullScreen value are not valid for the selected adapter format and device type..
        /// </summary>
        internal static string ValidateDeviceType {
            get {
                return ResourceManager.GetString("ValidateDeviceType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The selected MultiSampleQualityLevel value is invalid for the selected MultiSampleType..
        /// </summary>
        internal static string ValidateMultiSampleQualityInvalid {
            get {
                return ResourceManager.GetString("ValidateMultiSampleQualityInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à Must use SwapEffect.Discard when enabling multisampling..
        /// </summary>
        internal static string ValidateMultiSampleSwapEffect {
            get {
                return ResourceManager.GetString("ValidateMultiSampleSwapEffect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The selected MultiSampleType is not compatible with the current BackBufferFormat and IsFullScreen value for the selected adapter..
        /// </summary>
        internal static string ValidateMultiSampleTypeInvalid {
            get {
                return ResourceManager.GetString("ValidateMultiSampleTypeInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à The selected fullscreen PresentationInterval is not supported by the selected adapter..
        /// </summary>
        internal static string ValidatePresentationIntervalIncompatibleInFullScreen {
            get {
                return ResourceManager.GetString("ValidatePresentationIntervalIncompatibleInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When IsFullScreen is true, PresentationInterval must be one of the following: Default, Immediate, One, Two, Three, or Four..
        /// </summary>
        internal static string ValidatePresentationIntervalInFullScreen {
            get {
                return ResourceManager.GetString("ValidatePresentationIntervalInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When IsFullScreen is false, PresentationInterval must be one of the following: Default, Immediate, or One..
        /// </summary>
        internal static string ValidatePresentationIntervalInWindow {
            get {
                return ResourceManager.GetString("ValidatePresentationIntervalInWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When IsFullScreen is true, FullScreenRefreshRateInHz must be non-zero..
        /// </summary>
        internal static string ValidateRefreshRateInFullScreen {
            get {
                return ResourceManager.GetString("ValidateRefreshRateInFullScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à When IsFullScreen is false, FullScreenRefreshRateInHz must be zero..
        /// </summary>
        internal static string ValidateRefreshRateInWindow {
            get {
                return ResourceManager.GetString("ValidateRefreshRateInWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à SwapEffect must be one of the following: SwapEffect.Copy, SwapEffect.Discard, or SwapEffect.Flip..
        /// </summary>
        internal static string ValidateSwapEffectInvalid {
            get {
                return ResourceManager.GetString("ValidateSwapEffectInvalid", resourceCulture);
            }
        }
    }
}
